name: Build and Push Windows Nano Server Image

on:
  workflow_dispatch:

env:
  VERSION: 0.0.1

jobs:
  build-and-push:
    runs-on: windows-2022

    outputs:
      image_name_version: ${{ steps.vars.outputs.image_name_version }}

    defaults:
      run:
        shell: pwsh

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set lowercase image name
      id: vars
      run: |
        $imageName = "ghcr.io/$($env:GITHUB_REPOSITORY.ToLower())"
        $imageNameVersion = "$imageName:$env:VERSION"
        $repoUrl = "https://github.com/$env:GITHUB_REPOSITORY"
        "image_name_version=$imageNameVersion" >> $env:GITHUB_OUTPUT
        "repo_url=$repoUrl" >> $env:GITHUB_OUTPUT

    - name: Write Dockerfile inline
      run: |
        @"
        FROM mcr.microsoft.com/windows/nanoserver:ltsc2022
        ARG VER_TEST
        LABEL org.opencontainers.image.source=`"${{ steps.vars.outputs.repo_url }}"`
        LABEL org.opencontainers.image.description="Windows NanoServer test"
        LABEL version=`"$VER_TEST"`
        CMD ["cmd", "/c", "echo Image version is %VER_TEST%"]
        "@ | Set-Content -Path Dockerfile

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u $env:GITHUB_ACTOR --password-stdin

    - name: Build Docker image
      run: |
        docker build `
          --build-arg VER_TEST=$env:VERSION `
          -t "${{ steps.vars.outputs.image_name_version }}" .

    - name: Push Docker image
      run: |
        docker push "${{ steps.vars.outputs.image_name_version }}"

  run-image:
    needs: build-and-push
    runs-on: windows-2022

    defaults:
      run:
        shell: pwsh

    steps:
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u $env:GITHUB_ACTOR --password-stdin

    - name: Pull and run container
      run: |
        docker pull "${{ needs.build-and-push.outputs.image_name_version }}"
        docker run --rm "${{ needs.build-and-push.outputs.image_name_version }}"
